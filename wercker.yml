# This references the default nodejs container from
# the Docker Hub: https://registry.hub.docker.com/_/node/
# If you want Nodesource's container you would reference nodesource/node
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box:
 id: node:8.4.0
 services:
   - id: mysql
     env:
       MYSQL_DATABASE: seventy_eight
       MYSQL_ROOT_PASSWORD: root
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html

# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongodb
    # http://devcenter.wercker.com/docs/services/mongodb.html
build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    - script:
      name: echo nodejs information
      code: |
        echo "node version $(node -v) running"
        echo "npm version $(npm -v) running"
    - npm-install
    - script:
        name: install local packages
        code: sudo npm install dotenv
    - script:
        name: install global packages
        code: sudo npm install -g jasmine istanbul
    - script:
        name: write coveralls token file
        code: |
          echo "repo_token: $COVERALLS" > .coveralls.yml
    - script:
        name: write empty env file
        code: |
          echo "CI_BUILD=true\nDB_HOST=$MYSQL_PORT_3306_TCP_ADDR\nDB_SCHEMA=$MYSQL_DATABASE" > .env
    - script:
        name: show env
        code: |
          cat .env
    - script:
        name: run coverage tests
        code: npm run coverage
